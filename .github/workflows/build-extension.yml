name: Build JupyterLab Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9]
        node-version: [16.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter jupyterlab build wheel
        pip install jupyter-packaging
        
    - name: Install Node.js dependencies
      run: |
        npm install -g yarn
        yarn
        
    - name: Build extension
      run: |
        yarn run build:prod
        
    - name: Create tarball
      run: |
        mkdir -p dist
        tar -czf dist/jupyterlab-environment-manager.tar.gz lib/ style/ package.json README.md LICENSE
        
    - name: Upload tarball as artifact
      uses: actions/upload-artifact@v3
      with:
        name: jupyterlab-extension-tarball
        path: dist/jupyterlab-environment-manager.tar.gz
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/jupyterlab-environment-manager.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  create-release-on-main:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download tarball artifact
        uses: actions/download-artifact@v3
        with:
          name: jupyterlab-extension-tarball
          path: dist
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-${{ steps.date.outputs.date }}
          name: Nightly Build ${{ steps.date.outputs.date }}
          body: |
            Nightly build of the JupyterLab Environment Manager extension.
            
            This is an automated build from the main branch.
          files: dist/jupyterlab-environment-manager.tar.gz
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
